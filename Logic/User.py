# Form implementation generated from reading ui file 'User.ui'
#
# Created by: PyQt6 UI code generator 6.7.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


import sys
import os
from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QMessageBox, QDialog, QTreeWidget, QTreeWidgetItem, QLineEdit, QPushButton
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '../')))
from Database import database  # Import từ module database
from database_operations import *


class Ui_Dialog(object):
    def __init__(self, session):
        self.session = session
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(1162, 565)
        self.commandLinkButton = QtWidgets.QCommandLinkButton(parent=Dialog)
        self.commandLinkButton.setGeometry(QtCore.QRect(1000, 10, 131, 48))
        self.commandLinkButton.setObjectName("commandLinkButton")
        self.treeWidgetLichHoc = QtWidgets.QTreeWidget(parent=Dialog)
        self.treeWidgetLichHoc.setGeometry(QtCore.QRect(0, 180, 1161, 381))
        self.treeWidgetLichHoc.setStyleSheet("background-color: #f0f0f0; /* Màu nền xám nhạt */\n"
"color: black; /* Màu chữ đen */\n"
"border: 1px solid #cccccc; /* Viền màu xám */")
        self.treeWidgetLichHoc.setObjectName("treeWidgetLichHoc")
        self.txtSearchPH_User = QtWidgets.QLineEdit(parent=Dialog)
        self.txtSearchPH_User.setGeometry(QtCore.QRect(130, 110, 181, 41))
        self.txtSearchPH_User.setStyleSheet("background-color: #f0f0f0; /* Màu nền xám nhạt */\n"
"color: black; /* Màu chữ đen */\n"
"border: 1px solid #cccccc; /* Viền màu xám */")
        self.txtSearchPH_User.setObjectName("txtSearchPH_User")
        self.btSearchLichhoc = QtWidgets.QPushButton(parent=Dialog)
        self.btSearchLichhoc.setGeometry(QtCore.QRect(10, 110, 121, 41))
        self.btSearchLichhoc.setStyleSheet("background-color: rgb(0, 0, 127);\n"
"color: rgb(255, 255, 255);")
        self.btSearchLichhoc.setObjectName("btSearchLichhoc")
        self.btnPopupDKPH = QtWidgets.QPushButton(parent=Dialog)
        self.btnPopupDKPH.setGeometry(QtCore.QRect(1000, 110, 121, 41))
        self.btnPopupDKPH.setStyleSheet("background-color: rgb(0, 0, 127);\n"
"color: rgb(255, 255, 255);")
        self.btnPopupDKPH.setObjectName("btnPopupDKPH")

        self.retranslateUi(Dialog)
        self.checkSession(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)
         # Kết nối tín hiệu nút Tìm kiếm với hàm tìm kiếm
        self.btSearchLichhoc.clicked.connect(self.search)
        self.loadDataToTreeWidgetXeplich()
        self.txtSearchPH_User.textChanged.connect(self.handleInputChangedXeplich)
        self.commandLinkButton.clicked.connect(self.confirm_logout)
        self.btnPopupDKPH.clicked.connect(self.openRegisterRoomDialog)
    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.commandLinkButton.setText(_translate("Dialog", "Đăng xuất"))
        self.treeWidgetLichHoc.headerItem().setText(0, _translate("Dialog", "ID"))
        self.treeWidgetLichHoc.headerItem().setText(1, _translate("Dialog", "Tên khoa"))
        self.treeWidgetLichHoc.headerItem().setText(2, _translate("Dialog", "Tên lớp"))
        self.treeWidgetLichHoc.headerItem().setText(3, _translate("Dialog", "Tên giảng viên"))
        self.treeWidgetLichHoc.headerItem().setText(4, _translate("Dialog", "Tên môn"))
        self.treeWidgetLichHoc.headerItem().setText(5, _translate("Dialog", "Tên phòng"))
        self.treeWidgetLichHoc.headerItem().setText(6, _translate("Dialog", "Ngày"))
        self.treeWidgetLichHoc.headerItem().setText(7, _translate("Dialog", "Thời gian "))
        self.treeWidgetLichHoc.headerItem().setText(8, _translate("Dialog", "Tình trạng"))
        self.txtSearchPH_User.setPlaceholderText(_translate("Dialog", "Nhập tình trạng phòng"))
        self.btSearchLichhoc.setText(_translate("Dialog", "Tìm kiếm"))
        self.btnPopupDKPH.setText(_translate("Dialog", "Đăng ký phòng học"))

    def loadDataToTreeWidgetXeplich(self):
        loadDataToTreeWidget(self.treeWidgetLichHoc, database.load_dataXeplich)
    def search(self):
        # Lấy từ khóa tìm kiếm từ ô nhập liệu
        keyword = self.txtSearchPH_User.text()

        # Giả sử bạn có hàm search_database để tìm kiếm dữ liệu từ cơ sở dữ liệu
        results = database.search_Xeplich(keyword)  # Hàm này bạn cần triển khai dựa trên cơ sở dữ liệu của bạn

        # Xóa tất cả các mục hiện tại trong treeWidgetLichHoc
        self.treeWidgetLichHoc.clear()

        # Thêm kết quả tìm kiếm vào treeWidgetLichHoc
        for result in results:
            item = QTreeWidgetItem(self.treeWidgetLichHoc)
            item.setText(0, str(result[0]))
            item.setText(1, str(result[1]))
            item.setText(2, str(result[2]))
            item.setText(3, str(result[3]))
            item.setText(4, str(result[4]))
            item.setText(5, str(result[5]))
            item.setText(6, str(result[6]))
            item.setText(7, str(result[7]))
            item.setText(8, str(result[8]))
    
    def handleInputChangedXeplich(self, text):
        handleInputChanged(self.treeWidgetLichHoc, database.load_dataXeplich, text)

    def checkSession(self, Dialog):
        if 'username' not in self.session:
            QMessageBox.warning(Dialog, "Thông báo", "Vui lòng đăng nhập trước khi truy cập trang này!")
            Dialog.close()  # Đóng cửa sổ Admin
            self.openLoginWindow()
        else:
            Dialog.show() 

    def openRegisterRoomDialog(self):
        from DKPhongHoc import Ui_Dialog
        self.PopWindowW = QtWidgets.QMainWindow()
        self.ui_popup = Ui_Dialog(self.session)
        self.ui_popup.setupUi(self.PopWindowW)
        self.PopWindowW.show()
        
    def openLoginWindow(self):
        from Login import Ui_MainWindow
        self.loginWindow = QtWidgets.QMainWindow()
        self.ui_login = Ui_MainWindow()
        self.ui_login.setupUi(self.loginWindow)
        self.loginWindow.show()

    def confirm_logout(self):
        reply = QMessageBox.question(None, 'Xác nhận đăng xuất', 
                                     'Bạn có chắc chắn muốn đăng xuất?',
                                     QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No)
        if reply == QMessageBox.StandardButton.Yes:
            self.logout()

    def logout(self):
        # Xóa thông tin phiên đăng nhập
        self.session.clear()
        # Lưu trạng thái của cửa sổ hiện tại
        Dialog = QtWidgets.QApplication.activeWindow()
        if Dialog is not None:
            Dialog.close()
        # Mở cửa sổ đăng nhập
        self.openLoginWindow()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    session = {}  # Tạo một session rỗng
    ui = Ui_Dialog(session)
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec())
